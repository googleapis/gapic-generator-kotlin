/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.2.61'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.springframework.boot' version '2.0.2.RELEASE'
    id "com.google.protobuf" version "0.8.6"
}

group 'com.google.api'
version '0.1.0'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
    google()
    mavenCentral()
    jcenter()

    // temporary
    maven { url 'https://jitpack.io' }
}

configurations {
    ktlint
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'io.github.microutils:kotlin-logging:1.5.4'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // temporary (1.0.0-RC1 is missing a needed fix)
    implementation 'com.github.square:kotlinpoet:5dee19e'

    implementation 'org.yaml:snakeyaml:1.20'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'org.apache.commons:commons-text:1.4'

    implementation 'com.google.guava:guava:25.1-jre'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'com.github.pcj:google-options:1.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
    testImplementation "com.google.truth:truth:0.41"

    ktlint "com.github.shyiko:ktlint:0.28.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main {
        proto {
            srcDir 'api-common-protos'
        }
    }
}

// compile proto and generate gRPC stubs
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
}

mainClassName = 'com.google.api.kotlin.ClientPluginKt'
bootJar {
    mainClassName = 'com.google.api.kotlin.ClientPluginKt'
    classifier = 'core'

    launchScript()
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    sourceDirectories = files([
            "src/main/kotlin"
    ])
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['com/google/protobuf/**'])
        })
    }
}

check.dependsOn jacocoTestReport
test.finalizedBy(project.tasks.jacocoTestReport)

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt", "test/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt", "test/**/*.kt"
}
